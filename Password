import re
import flet as ft

def main(page: ft.Page):
    page.title= "üîê Password Checker"
    page.window_width= 450
    page.window_height=700
    page.bgcolor-ft.colors.PINK_50

def toggle_password(e):
        pwd_input.password=not pwd_input.password
        eye_btn.icon= (
            ft.icons.REMOVE_RED_EYE if pwd_input.password else ft.icons.VISIBILITY_OFF
        ) ##CHATGPT
        page.update()

     def check_password(e=None):
        pwd=pwd_input.value or ""
        results.controls.clear()
    rules = [
            ("M√≠nimo 8 caracteres", len(pwd) >= 8),
            ("Al menos 1 may√∫scula", bool(re.search(r"[A-Z]", pwd))),
            ("Al menos 1 min√∫scula", bool(re.search(r"[a-z]", pwd))),
            ("Al menos 2 n√∫meros", len(re.findall(r"\d", pwd)) >= 2),
            ("Al menos 1 car√°cter especial", bool(re.search(r"[!@#\$%\^&\*]", pwd))),
        ]
    custom = [
            ("Incluye '<3'", '<3' in pwd),
            ("Contiene emoji 'üòé'", 'üòé' in pwd),
        ]

    all_ok = True
        for desc, ok in rules + custom:
            all_ok &= ok
            icon = ft.icons.CHECK_CIRCLE if ok else ft.icons.CANCEL
            color = ft.colors.GREEN if ok else ft.colors.RED
            results.controls.append(
                ft.Row([ft.Icon(icon, color=color), ft.Text(desc)])
            )
        final = "‚úÖ ¬°Contrase√±a aceptada!" if all_ok else "‚ùå Intenta de nuevo"
        results.controls.append(ft.Divider())
        results.controls.append(ft.Text(final, weight=ft.FontWeight.BOLD))
    `   
    `   if all_ok:
            page.snack_bar = ft.SnackBar(
                ft.Text("üéâ Perfecto! Tu contrase√±a es segura para guardar tus secretos.")
            )
            page.snack_bar.open = True

        page.update()`

        rules_dlg = ft.AlertDialog(
              title= ft.Text("")
        )
        rules_dlg = ft.AlertDialog(
        title=ft.Text("üìú Reglas personalizadas"),
        content=ft.Column([
            ft.Text("1. La suma de todos los d√≠gitos debe ser 21."),
            ft.Text("2. Debe contener al menos un emoji 'üòé'."),
        ], spacing=5),
        actions=[
            ft.TextButton("Cerrar", on_click=lambda e: setattr(rules_dlg, 'open', False))
        ],
        modal=True
    )

    title_row = ft.Row([
        ft.Text(
            "üîí Password Checker", 
            size=24, 
            weight=ft.FontWeight.BOLD,
            text_align=ft.TextAlign.CENTER
        ),
        ft.IconButton(
            icon=ft.icons.INFO_OUTLINE,
            tooltip="Ver reglas personalizadas",
            on_click=lambda e: setattr(rules_dlg, 'open', True)
        )
    ], alignment=ft.MainAxisAlignment.CENTER)

    pwd_input = ft.TextField(
        label="Tu contrase√±a",
        password=True,
        width=350,
        on_change=check_password
    )
    eye_btn = ft.IconButton(
        icon=ft.icons.REMOVE_RED_EYE_OUTLINED,
        tooltip="Mostrar/ocultar contrase√±a",
        on_click=toggle_password
    )
    check_btn = ft.ElevatedButton(
        text="Comprobar",
        on_click=check_password,
        width=150
    )
    results_label = ft.Text("Resultados:", size=16, weight=ft.FontWeight.BOLD)
    results = ft.Column(spacing=5)


